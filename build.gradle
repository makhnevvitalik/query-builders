plugins {
    id 'java-library'
    id "io.freefair.lombok" version '6.3.0'
    id 'jacoco'
    id "maven-publish"
    id 'io.github.gradle-nexus.publish-plugin' version '1.1.0'
    id 'signing'
}

group 'io.github.makhnevvitalik'
version '0.9.0'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.springframework.data:spring-data-mongodb:3.3.1'

    testImplementation 'org.springframework.data:spring-data-mongodb:3.3.1'
    testImplementation 'cz.jirutka.rsql:rsql-parser:2.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
    useJUnitPlatform()
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
test.finalizedBy jacocoTestReport

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.name
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'query-builders'
                description = 'Type safe database agnostic query builders'
                url = 'https://github.com/makhnevvitalik/query-builders'
                developers {
                    developer {
                        id = 'makhnevvitalik'
                        name = 'Vitaly Makhnev'
                        email = 'makhnevvitalik@gmail.com'
                    }
                }
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/makhnevvitalik/query-builders/blob/main/LICENSE'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/makhnevvitalik/query-builders'
                    developerConnection = 'scm:git:ssh://github.com/makhnevvitalik/query-builders'
                    url = 'https://github.com/makhnevvitalik/query-builders'
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        sonatype {  //only for users registered in Sonatype after 24 Feb 2021
            nexusUrl = uri("https://s01.oss.sonatype.org/service/local/")
            snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
            username = findProperty("nexus.staging.username")
            password = findProperty("nexus.staging.password")
        }
    }
}

signing {
    def signingKeyId = findProperty("signingKeyId")
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    sign publishing.publications.mavenJava
}